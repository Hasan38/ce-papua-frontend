// This file is auto generated by scripts/generate-component-meta.ts
import type { ComponentMeta } from 'vue-component-meta'

export const components = ['VAccordion', 'VAccordionImage', 'VAction', 'VAnimatedCheckbox', 'VAvatar', 'VAvatarStack', 'VBillboardJS', 'VBlock', 'VBreadcrumb', 'VButton', 'VButtons', 'VCard', 'VCardAction', 'VCardAdvanced', 'VCardMedia', 'VCardSocial', 'VCheckbox', 'VCollapse', 'VCollapseLinks', 'VCollapseModel', 'VControl', 'VCreditCard', 'VDropdown', 'VField', 'VFilePond', 'VFlex', 'VFlexItem', 'VFlexPagination', 'VFlexTable', 'VFlexTableCell', 'VFlexTableSortColumn', 'VFlexTableToolbar', 'VFlexTableWrapper', 'VGrid', 'VGridItem', 'VIMaskInput', 'VIcon', 'VIconBox', 'VIconButton', 'VIconWrap', 'VInput', 'VLabel', 'VLoader', 'VMarkdownEditor', 'VMarkdownPreview', 'VMessage', 'VModal', 'VOptgroup', 'VOption', 'VPageContent', 'VPageContentWrapper', 'VPeity', 'VPhotosSwipe', 'VPlaceholderPage', 'VPlaceholderSection', 'VPlaceload', 'VPlaceloadAvatar', 'VPlaceloadText', 'VPlaceloadWrap', 'VPlyr', 'VProgress', 'VRadio', 'VRangeRating', 'VReloadPrompt', 'VSelect', 'VSnack', 'VSwitchBlock', 'VSwitchSegment', 'VTabs', 'VTag', 'VTags', 'VTextEllipsis', 'VTextarea', 'VViewWrapper', 'VVivus'] as const

export const VAccordionMeta = { type: 1, props: [{ name: 'exclusive', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'items', global: false, description: '', tags: [], required: false, type: '{ title: string; content: string; }[] | undefined', default: '[]', schema: '', declarations: [] }, { name: 'openItems', global: false, description: '', tags: [], required: false, type: 'number[] | undefined', default: '[]', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'accordion-item', type: '{ item: { title: string; content: string; }; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }, { name: 'accordion-item-content', type: '{ item: { title: string; content: string; }; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }, { name: 'accordion-item-summary', type: '{ item: { title: string; content: string; }; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VAccordionImageMeta = { type: 1, props: [{ name: 'items', global: false, description: '', tags: [], required: false, type: 'VAccordionImageItem[] | undefined', default: '[]', schema: '', declarations: [] }], events: [{ name: 'select', type: '[key: string | number]', signature: '(event: "select", key: string | number): void', schema: [], declarations: [] }], exposed: [], slots: [{ name: 'accordion-item', type: '{ item: VAccordionImageItem; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }, { name: 'accordion-item-content', type: '{ item: VAccordionImageItem; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }, { name: 'accordion-item-summary', type: '{ item: VAccordionImageItem; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VActionMeta = { type: 1, props: [{ name: 'active', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'dark', global: false, description: '', tags: [], required: false, type: 'VActionDark | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'grey', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'rounded', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'to', global: false, description: '', tags: [], required: false, type: 'RouteLocationAsString | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VAnimatedCheckboxMeta = { type: 2, props: [{ name: 'value', global: false, description: '', tags: [], required: true, type: 'string | number', schema: '', declarations: [] }, { name: 'color', global: false, description: '', tags: [], required: false, type: 'VAnimatedCheckboxColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: '(string | number)[] | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VAvatarMeta = { type: 1, props: [{ name: 'badge', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'color', global: false, description: '', tags: [], required: false, type: 'VAvatarColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'dot', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'dotColor', global: false, description: '', tags: [], required: false, type: 'VAvatarDotColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'initials', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"?"', schema: '', declarations: [] }, { name: 'picture', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'pictureDark', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'placeholder', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"https://via.placeholder.com/50x50"', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: 'VAvatarSize | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'squared', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'avatar', type: '{}', description: '', schema: '', declarations: [] }, { name: 'badge', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VAvatarStackMeta = { type: 1, props: [{ name: 'avatars', global: false, description: '', tags: [], required: false, type: 'VAvatarProps[] | undefined', default: '[]', schema: '', declarations: [] }, { name: 'limit', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '5', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: 'VAvatarStackSize | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VBillboardJSMeta = { type: 1, props: [{ name: 'options', global: false, description: '', tags: [], required: true, type: 'ChartOptions', schema: '', declarations: [] }], events: [{ name: 'ready', type: '[billboard: Chart]', signature: '(event: "ready", billboard: Chart): void', schema: [], declarations: [] }], exposed: [], slots: [] } satisfies ComponentMeta
export const VBlockMeta = { type: 1, props: [{ name: 'center', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'infratitle', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'lighter', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'mResponsive', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'narrow', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'subtitle', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'title', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'tResponsive', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'action', type: '{}', description: '', schema: '', declarations: [] }, { name: 'default', type: '{}', description: '', schema: '', declarations: [] }, { name: 'icon', type: '{}', description: '', schema: '', declarations: [] }, { name: 'title', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VBreadcrumbMeta = { type: 1, props: [{ name: 'items', global: false, description: '', tags: [], required: true, type: 'VBreadcrumbItem[]', schema: '', declarations: [] }, { name: 'align', global: false, description: '', tags: [], required: false, type: 'VBreadcrumbAlign | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'separator', global: false, description: '', tags: [], required: false, type: 'VBreadcrumbSeparator | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'withIcons', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'breadcrumb-item', type: '{ item: VBreadcrumbItem; index: number; }', description: '', schema: '', declarations: [] }, { name: 'breadcrumb-item-label', type: '{ item: VBreadcrumbItem; index: number; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VButtonMeta = { type: 1, props: [{ name: 'bold', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'color', global: false, description: '', tags: [], required: false, type: 'VButtonColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'dark', global: false, description: '', tags: [], required: false, type: 'VButtonDark | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'darkOutlined', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'disabled', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'elevated', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'fullwidth', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'href', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'icon', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'iconCaret', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'light', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'loading', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'lower', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'outlined', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'placeload', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'raised', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'rounded', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: 'VButtonSize | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'static', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'to', global: false, description: '', tags: [], required: false, type: 'RouteLocationAsString | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '[void]', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VButtonsMeta = { type: 1, props: [{ name: 'addons', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'align', global: false, description: '', tags: [], required: false, type: 'VButtonsAlign | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VCardMeta = { type: 1, props: [{ name: 'color', global: false, description: '', tags: [], required: false, type: 'VCardColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'elevated', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'radius', global: false, description: '', tags: [], required: false, type: 'VCardRadius | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VCardActionMeta = { type: 1, props: [{ name: 'title', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'avatar', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'badge', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'content', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'radius', global: false, description: '', tags: [], required: false, type: 'VCardActionRadius | undefined', default: '"regular"', schema: '', declarations: [] }, { name: 'subtitle', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'action', type: '{}', description: '', schema: '', declarations: [] }, { name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VCardAdvancedMeta = { type: 1, props: [{ name: 'radius', global: false, description: '', tags: [], required: false, type: 'VCardAdvancedRadius | undefined', default: '"regular"', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'content', type: '{}', description: '', schema: '', declarations: [] }, { name: 'footer-left', type: '{}', description: '', schema: '', declarations: [] }, { name: 'footer-right', type: '{}', description: '', schema: '', declarations: [] }, { name: 'header-left', type: '{}', description: '', schema: '', declarations: [] }, { name: 'header-right', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VCardMediaMeta = { type: 1, props: [{ name: 'title', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'avatar', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'badge', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'format', global: false, description: '', tags: [], required: false, type: 'VCardMediaFormat | undefined', default: '"4by3"', schema: '', declarations: [] }, { name: 'image', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'placeholder', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"https://via.placeholder.com/1280x960"', schema: '', declarations: [] }, { name: 'subtitle', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VCardSocialMeta = { type: 1, props: [{ name: 'network', global: false, description: '', tags: [], required: true, type: 'VCardSocialNetwork', schema: '', declarations: [] }, { name: 'title', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'avatar', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'hashtags', global: false, description: '', tags: [], required: false, type: 'string[] | undefined', default: '[]', schema: '', declarations: [] }, { name: 'likeLabel', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"Like"', schema: '', declarations: [] }, { name: 'shareLabel', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"Share"', schema: '', declarations: [] }, { name: 'username', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }], events: [{ name: 'hashtagClick', type: '[tag: string]', signature: '(event: "hashtagClick", tag: string): void', schema: [], declarations: [] }, { name: 'iconClick', type: '[]', signature: '(event: "iconClick"): void', schema: [], declarations: [] }, { name: 'like', type: '[]', signature: '(event: "like"): void', schema: [], declarations: [] }, { name: 'share', type: '[]', signature: '(event: "share"): void', schema: [], declarations: [] }], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VCheckboxMeta = { type: 1, props: [{ name: 'circle', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'color', global: false, description: '', tags: [], required: false, type: 'VCheckboxColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'falseValue', global: false, description: '', tags: [], required: false, type: 'any', default: 'false', schema: '', declarations: [] }, { name: 'id', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'label', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'any', schema: '', declarations: [] }, { name: 'paddingless', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'raw', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'solid', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'trueValue', global: false, description: '', tags: [], required: false, type: 'any', default: 'true', schema: '', declarations: [] }, { name: 'value', global: false, description: '', tags: [], required: false, type: 'any', default: 'undefined', schema: '', declarations: [] }, { name: 'wrapperClass', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{ id: Ref<string> | Readonly<Ref<string>>; field: Ref<FieldContext<unknown> | undefined>; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VCollapseMeta = { type: 1, props: [{ name: 'itemOpen', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'items', global: false, description: '', tags: [], required: false, type: 'VCollapseItem[] | undefined', default: '[]', schema: '', declarations: [] }, { name: 'withChevron', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'collapse-item', type: '{ item: VCollapseItem; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }, { name: 'collapse-item-content', type: '{ item: VCollapseItem; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }, { name: 'collapse-item-head', type: '{ item: VCollapseItem; index: number; }', description: '', schema: '', declarations: [] }, { name: 'collapse-item-summary', type: '{ item: VCollapseItem; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VCollapseLinksMeta = { type: 1, props: [{ name: 'collapseId', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'open', global: false, description: '', tags: [], required: false, type: 'string | boolean | undefined', default: 'undefined', schema: '', declarations: [] }], events: [{ name: 'update:open', type: 'any[]', signature: '(event: "update:open", ...args: any[]): void', schema: [], declarations: [] }], exposed: [], slots: [{ name: 'default', type: '[void]', description: '', schema: '', declarations: [] }, { name: 'header', type: '[void]', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VCollapseModelMeta = { type: 1, props: [{ name: 'items', global: false, description: '', tags: [], required: true, type: 'VCollapseItem[]', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'number | undefined', schema: '', declarations: [] }, { name: 'withChevron', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'collapse-item', type: '{ item: VCollapseItem; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }, { name: 'collapse-item-content', type: '{ item: VCollapseItem; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }, { name: 'collapse-item-summary', type: '{ item: VCollapseItem; index: number; toggle: (key: number) => void; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VControlMeta = { type: 1, props: [{ name: 'expanded', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'fullwidth', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'hasError', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'icon', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'id', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'isValid', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'loading', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'nogrow', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'raw', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'subcontrol', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'textaddon', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{ field: FieldContext<unknown> | undefined; id: string; }', description: '', schema: '', declarations: [] }, { name: 'extra', type: '{ field: FieldContext<unknown> | undefined; id: string; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VCreditCardMeta = { type: 1, props: [{ name: 'color', global: false, description: '', tags: [], required: false, type: 'VCreditCardColor | undefined', default: '"grey"', schema: '', declarations: [] }, { name: 'cvc', global: false, description: '', tags: [], required: false, type: 'string | number | undefined', default: '"123"', schema: '', declarations: [] }, { name: 'expiry', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"01/30"', schema: '', declarations: [] }, { name: 'flipped', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'name', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"John Doe"', schema: '', declarations: [] }, { name: 'number', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"1234 1234 1234 1234"', schema: '', declarations: [] }], events: [{ name: 'flip', type: '[]', signature: '(event: "flip"): void', schema: [], declarations: [] }], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VDropdownMeta = { type: 1, props: [{ name: 'classes', global: false, description: '', tags: [], required: false, type: '{ wrapper?: string | string[] | undefined; content?: string | string[] | undefined; } | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'color', global: false, description: '', tags: [], required: false, type: 'VDropdownColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'icon', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'modern', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'options', global: false, description: '', tags: [], required: false, type: 'DropdownOptions | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'right', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'spaced', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'title', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'up', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [{ name: 'close', type: '() => void', description: '', schema: '', declarations: [] }, { name: 'isOpen', type: 'boolean', description: '', schema: '', declarations: [] }, { name: 'open', type: '() => void', description: '', schema: '', declarations: [] }, { name: 'toggle', type: '() => void', description: '', schema: '', declarations: [] }], slots: [{ name: 'button', type: '{ isOpen: boolean; open: () => void; close: () => void; toggle: () => void; }', description: '', schema: '', declarations: [] }, { name: 'content', type: '{ isOpen: boolean; open: () => void; close: () => void; toggle: () => void; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VFieldMeta = { type: 1, props: [{ name: 'addons', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'grouped', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'horizontal', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'id', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'label', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'multiline', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'raw', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'subcontrol', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'textaddon', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [{ name: 'field', type: 'FieldContext<unknown> | undefined', description: '', schema: '', declarations: [] }], slots: [{ name: 'default', type: '{ field: FieldContext<unknown> | undefined; id: string; }', description: '', schema: '', declarations: [] }, { name: 'label', type: '{ field: FieldContext<unknown> | undefined; id: string; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VFilePondMeta = { type: 1, props: [{ name: 'size', global: false, description: '', tags: [], required: false, type: 'FilePondSize', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VFlexMeta = { type: 1, props: [{ name: 'alignContent', global: false, description: '', tags: [], required: false, type: 'VFlexAlignContent | undefined', default: '"normal"', schema: '', declarations: [] }, { name: 'alignItems', global: false, description: '', tags: [], required: false, type: 'VFlexAlignItems | undefined', default: '"normal"', schema: '', declarations: [] }, { name: 'columnGap', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"normal"', schema: '', declarations: [] }, { name: 'flexDirection', global: false, description: '', tags: [], required: false, type: 'VFlexDirection | undefined', default: '"row"', schema: '', declarations: [] }, { name: 'flexWrap', global: false, description: '', tags: [], required: false, type: 'VFlexWrap | undefined', default: '"nowrap"', schema: '', declarations: [] }, { name: 'inline', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'justifyContent', global: false, description: '', tags: [], required: false, type: 'VFlexJustifyContent | undefined', default: '"normal"', schema: '', declarations: [] }, { name: 'rowGap', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"normal"', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VFlexItemMeta = { type: 1, props: [{ name: 'alignSelf', global: false, description: '', tags: [], required: false, type: 'VFlexItemAlignSelf | undefined', default: '"auto"', schema: '', declarations: [] }, { name: 'flexBasis', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"auto"', schema: '', declarations: [] }, { name: 'flexGrow', global: false, description: '', tags: [], required: false, type: 'string | number | undefined', default: '0', schema: '', declarations: [] }, { name: 'flexShrink', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '0', schema: '', declarations: [] }, { name: 'order', global: false, description: '', tags: [], required: false, type: 'string | number | undefined', default: '0', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VFlexPaginationMeta = { type: 1, props: [{ name: 'itemPerPage', global: false, description: '', tags: [], required: true, type: 'number', schema: '', declarations: [] }, { name: 'totalItems', global: false, description: '', tags: [], required: true, type: 'number', schema: '', declarations: [] }, { name: 'currentPage', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '1', schema: '', declarations: [] }, { name: 'maxLinksDisplayed', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '4', schema: '', declarations: [] }, { name: 'noRouter', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'routerQueryKey', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"page"', schema: '', declarations: [] }], events: [{ name: 'update:currentPage', type: '[currentPage: number]', signature: '(event: "update:currentPage", currentPage: number): void', schema: [], declarations: [] }], exposed: [], slots: [{ name: 'after-navigation', type: '{}', description: '', schema: '', declarations: [] }, { name: 'after-pagination', type: '{}', description: '', schema: '', declarations: [] }, { name: 'before-navigation', type: '{}', description: '', schema: '', declarations: [] }, { name: 'before-pagination', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VFlexTableMeta = { type: 1, props: [{ name: 'clickable', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'columns', global: false, description: '', tags: [], required: false, type: 'Record<string, string | Partial<VFlexTableColumn>> | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'compact', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'data', global: false, description: '', tags: [], required: false, type: 'any[] | undefined', default: '[]', schema: '', declarations: [] }, { name: 'noHeader', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'printObjects', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'reactive', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'rounded', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'separators', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'subtable', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [{ name: 'rowClick', type: '[row: any, index: number]', signature: '(event: "rowClick", row: any, index: number): void', schema: [], declarations: [] }], exposed: [], slots: [{ name: 'body', type: '{}', description: '', schema: '', declarations: [] }, { name: 'body-cell', type: '{ row: any; column: VFlexTableColumn; index: number; value: any; }', description: '', schema: '', declarations: [] }, { name: 'body-row', type: '{ row: any; columns: VFlexTableColumn[]; index: number; }', description: '', schema: '', declarations: [] }, { name: 'body-row-post', type: '{ row: any; columns: VFlexTableColumn[]; index: number; }', description: '', schema: '', declarations: [] }, { name: 'body-row-pre', type: '{ row: any; columns: VFlexTableColumn[]; index: number; }', description: '', schema: '', declarations: [] }, { name: 'header', type: '{}', description: '', schema: '', declarations: [] }, { name: 'header-column', type: '{ column: VFlexTableColumn; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VFlexTableCellMeta = { type: 1, props: [{ name: 'column', global: false, description: '', tags: [], required: false, type: 'Partial<VFlexTableColumn> | undefined', default: '{}', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VFlexTableSortColumnMeta = { type: 1, props: [{ name: 'id', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'label', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'noRouter', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'routerQueryKey', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"sort"', schema: '', declarations: [] }], events: [{ name: 'update:modelValue', type: 'any[]', signature: '(event: "update:modelValue", ...args: any[]): void', schema: [], declarations: [] }], exposed: [], slots: [{ name: 'default', type: '[{ isDesc: boolean; isAsc: boolean; nextSort?: string | undefined; value: string | LocationQueryValue[]; }]', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VFlexTableToolbarMeta = { type: 1, props: [], events: [], exposed: [], slots: [{ name: 'left', type: '{}', description: '', schema: '', declarations: [] }, { name: 'right', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VFlexTableWrapperMeta = { type: 1, props: [{ name: 'columns', global: false, description: '', tags: [], required: false, type: 'Record<string, string | Partial<VFlexTableWrapperColumn>> | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'data', global: false, description: '', tags: [], required: false, type: 'any[] | VFlexTableWrapperDataResolver<any> | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'debounceSearch', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '300', schema: '', declarations: [] }, { name: 'limit', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'page', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'searchTerm', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'sort', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'total', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [{ name: 'onUpdate:limit', type: '((...args: any[]) => any) | undefined', description: '', schema: '', declarations: [] }, { name: 'onUpdate:page', type: '((...args: any[]) => any) | undefined', description: '', schema: '', declarations: [] }, { name: 'onUpdate:searchTerm', type: '((...args: any[]) => any) | undefined', description: '', schema: '', declarations: [] }, { name: 'onUpdate:sort', type: '((...args: any[]) => any) | undefined', description: '', schema: '', declarations: [] }], slots: [{ name: 'default', type: '[VFlexTableWrapperInjection]', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VGridMeta = { type: 1, props: [{ name: 'alignContent', global: false, description: '', tags: [], required: false, type: 'VGridAlignContent | undefined', default: '"initial"', schema: '', declarations: [] }, { name: 'alignItems', global: false, description: '', tags: [], required: false, type: 'VGridAlignItems | undefined', default: '"initial"', schema: '', declarations: [] }, { name: 'columnGap', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"normal"', schema: '', declarations: [] }, { name: 'gridAutoColumns', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"auto"', schema: '', declarations: [] }, { name: 'gridAutoFlow', global: false, description: '', tags: [], required: false, type: 'VGridAutoFlow | undefined', default: '"row"', schema: '', declarations: [] }, { name: 'gridAutoRows', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"auto"', schema: '', declarations: [] }, { name: 'gridTemplateAreas', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"none"', schema: '', declarations: [] }, { name: 'gridTemplateColumns', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"none"', schema: '', declarations: [] }, { name: 'gridTemplateRows', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"none"', schema: '', declarations: [] }, { name: 'inline', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'justifyContent', global: false, description: '', tags: [], required: false, type: 'VGridJustifyContent | undefined', default: '"initial"', schema: '', declarations: [] }, { name: 'justifyItems', global: false, description: '', tags: [], required: false, type: 'VGridJustifyItems | undefined', default: '"initial"', schema: '', declarations: [] }, { name: 'placeContent', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"normal"', schema: '', declarations: [] }, { name: 'rowGap', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"normal"', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VGridItemMeta = { type: 1, props: [{ name: 'alignSelf', global: false, description: '', tags: [], required: false, type: 'VGridAlignSelf | undefined', default: '"auto"', schema: '', declarations: [] }, { name: 'gridColumnEnd', global: false, description: '', tags: [], required: false, type: 'string | number | undefined', default: '"auto"', schema: '', declarations: [] }, { name: 'gridColumnStart', global: false, description: '', tags: [], required: false, type: 'string | number | undefined', default: '"auto"', schema: '', declarations: [] }, { name: 'gridRowEnd', global: false, description: '', tags: [], required: false, type: 'string | number | undefined', default: '"auto"', schema: '', declarations: [] }, { name: 'gridRowStart', global: false, description: '', tags: [], required: false, type: 'string | number | undefined', default: '"auto"', schema: '', declarations: [] }, { name: 'justifySelf', global: false, description: '', tags: [], required: false, type: 'VGridJustifySelf | undefined', default: '"auto"', schema: '', declarations: [] }, { name: 'placeSelf', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"auto"', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VIMaskInputMeta = { type: 2, props: [{ name: 'modelValue', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'options', global: false, description: '', tags: [], required: true, type: 'FactoryArg', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VIconMeta = { type: 1, props: [{ name: 'icon', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VIconBoxMeta = { type: 1, props: [{ name: 'bordered', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'color', global: false, description: '', tags: [], required: false, type: 'VIconBoxColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'rounded', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: 'VIconBoxSize | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VIconButtonMeta = { type: 1, props: [{ name: 'icon', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'bold', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'circle', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'color', global: false, description: '', tags: [], required: false, type: 'VIconButtonColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'dark', global: false, description: '', tags: [], required: false, type: 'VIconButtonDark | undefined', default: '"1"', schema: '', declarations: [] }, { name: 'darkOutlined', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'disabled', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'href', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'light', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'loading', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'outlined', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'raised', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'to', global: false, description: '', tags: [], required: false, type: 'Record<string, any> | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VIconWrapMeta = { type: 1, props: [{ name: 'color', global: false, description: '', tags: [], required: false, type: 'VIconWrapColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'dark', global: false, description: '', tags: [], required: false, type: 'VIconWrapDark | undefined', default: '"3"', schema: '', declarations: [] }, { name: 'darkCardBordered', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'darkPrimary', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'hasBackground', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'hasLargeIcon', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'icon', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'picture', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'placeholder', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: 'VIconWrapSize | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'after', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VInputMeta = { type: 1, props: [{ name: 'falseValue', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'any', default: '""', schema: '', declarations: [] }, { name: 'raw', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'trueValue', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'true', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VLabelMeta = { type: 1, props: [{ name: 'id', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'raw', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{ id: Ref<string> | Readonly<Ref<string>>; field: Ref<FieldContext<unknown> | undefined>; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VLoaderMeta = { type: 1, props: [{ name: 'active', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'card', global: false, description: '', tags: [], required: false, type: 'VLoaderWrapperRadius | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'grey', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: 'VLoaderSize | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'translucent', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VMarkdownEditorMeta = { type: 1, props: [{ name: 'autogrow', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'commands', global: false, description: '', tags: [], required: false, type: 'Command[] | undefined', default: '[]', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'string | undefined', schema: '', declarations: [] }, { name: 'options', global: false, description: '', tags: [], required: false, type: 'Partial<TextareaMarkdownOptions> | undefined', default: '{\n    enableIndentExtension: true,\n    enableLinkPasteExtension: true,\n    enableOrderedListAutoCorrectExtension: true,\n    enablePrefixWrappingExtension: true,\n    enableProperLineRemoveBehaviorExtension: true,\n}', schema: '', declarations: [] }, { name: 'toolbar', global: false, description: '', tags: [], required: false, type: 'VMarkdownEditorToolbar | undefined', default: '{\n    "bold": {\n        icon: "ci:bold",\n        tooltip: "Bold (Ctrl + B)",\n        action: "bold",\n    },\n    "italic": {\n        icon: "ci:italic",\n        tooltip: "Italic (Ctrl + I)",\n        action: "italic",\n    },\n    "strike-through": {\n        icon: "ci:strikethrough",\n        tooltip: "Strike Through (Ctrl + Shift + X)",\n        action: "strike-through",\n    },\n    "headings": {\n        icon: "ci:heading",\n        tooltip: "Headings",\n        children: {\n            h1: {\n                icon: "ci:heading-h1",\n                tooltip: "H1",\n                action: "h1",\n            },\n            h2: {\n                icon: "ci:heading-h2",\n                tooltip: "H2",\n                action: "h2",\n            },\n            h3: {\n                icon: "ci:heading-h3",\n                tooltip: "H3",\n                action: "h3",\n            },\n            h4: {\n                icon: "ci:heading-h4",\n                tooltip: "H4",\n                action: "h4",\n            },\n            h5: {\n                icon: "ci:heading-h5",\n                tooltip: "H5",\n                action: "h5",\n            },\n            h6: {\n                icon: "ci:heading-h6",\n                tooltip: "H6",\n                action: "h6",\n            },\n        },\n    },\n    "unordered-list": {\n        icon: "ci:list-ul",\n        tooltip: "Unordered List",\n        action: "unordered-list",\n    },\n    "ordered-list": {\n        icon: "ci:list-ol",\n        tooltip: "Ordered List",\n        action: "ordered-list",\n    },\n    "code-block": {\n        icon: "ci:terminal",\n        tooltip: "Code Block",\n        action: "code-block",\n    },\n    "code-inline": {\n        icon: "ci:code",\n        tooltip: "Code Inline",\n        action: "code-inline",\n    },\n    // code: {\n    //   icon: \'ci:code\',\n    //   tooltip: \'Code\',\n    // },\n    "link": {\n        icon: "ci:link",\n        tooltip: "Link",\n        action: "link",\n    },\n    "image": {\n        icon: "ci:image",\n        tooltip: "Image",\n        action: "image",\n    },\n    "block-quotes": {\n        icon: "ci:double-quotes-l",\n        tooltip: "Block Quotes",\n        action: "block-quotes",\n    },\n}', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'after-textarea', type: '{}', description: '', schema: '', declarations: [] }, { name: 'before-textarea', type: '{}', description: '', schema: '', declarations: [] }, { name: 'preview', type: '{ value: string; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VMarkdownPreviewMeta = { type: 1, props: [{ name: 'maxWidth', global: false, description: '', tags: [], required: false, type: '"small" | "medium" | "fullwidth" | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'placeholder', global: false, description: '', tags: [], required: false, type: 'VPlaceloadProps | undefined', default: '{\n    height: "100px",\n}', schema: '', declarations: [] }, { name: 'shiki', global: false, description: '', tags: [], required: false, type: '{ langs: ("vue" | "bash" | "batch" | "be" | "c#" | "c++" | "cdc" | "clj" | "cmd" | "console" | "cql" | "cs" | "dockerfile" | "erl" | "f#" | "fs" | "fsl" | "gjs" | "gql" | "gts" | "hbs" | ... 200 more ... | "zig")[]; theme: "css-variables" | ... 28 more ... | { ...; }; } | undefined', default: '{\n    theme: {\n        light: "min-light",\n        dark: "github-dark",\n    },\n    langs: ["vue", "vue-html", "typescript", "bash", "scss"],\n}', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: '"small" | "medium" | "large" | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'source', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '""', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VMessageMeta = { type: 1, props: [{ name: 'closable', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'color', global: false, description: '', tags: [], required: false, type: 'VMessageColor | undefined', default: 'undefined', schema: '', declarations: [] }], events: [{ name: 'close', type: '[]', signature: '(event: "close"): void', schema: [], declarations: [] }], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VModalMeta = { type: 1, props: [{ name: 'title', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'actions', global: false, description: '', tags: [], required: false, type: 'VModalAction | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'cancelLabel', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'is', global: false, description: '', tags: [], required: false, type: 'string | Component | undefined', default: '"div"', schema: '', declarations: [] }, { name: 'noclose', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'noscroll', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'open', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'rounded', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: 'VModalSize | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'tabs', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [{ name: 'close', type: '[]', signature: '(event: "close"): void', schema: [], declarations: [] }], exposed: [], slots: [{ name: 'action', type: '{ close: () => void; }', description: '', schema: '', declarations: [] }, { name: 'cancel', type: '{ close: () => void; }', description: '', schema: '', declarations: [] }, { name: 'content', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VOptgroupMeta = { type: 1, props: [], events: [], exposed: [], slots: [{ name: 'default', type: '{ field: FieldContext<unknown> | undefined; id: string; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VOptionMeta = { type: 1, props: [], events: [], exposed: [], slots: [{ name: 'default', type: '{ field: FieldContext<unknown> | undefined; id: string; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VPageContentMeta = { type: 1, props: [], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VPageContentWrapperMeta = { type: 1, props: [], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VPeityMeta = { type: 1, props: [{ name: 'fill', global: false, description: '', tags: [], required: false, type: 'string[] | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'height', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '16', schema: '', declarations: [] }, { name: 'innerRadius', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '5', schema: '', declarations: [] }, { name: 'max', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'min', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'padding', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '0.1', schema: '', declarations: [] }, { name: 'radius', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '8', schema: '', declarations: [] }, { name: 'stroke', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'strokeWidth', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '1', schema: '', declarations: [] }, { name: 'type', global: false, description: '', tags: [], required: false, type: 'PeityType | undefined', default: '"line"', schema: '', declarations: [] }, { name: 'values', global: false, description: '', tags: [], required: false, type: 'number[] | undefined', default: '[]', schema: '', declarations: [] }, { name: 'width', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '16', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VPhotosSwipeMeta = { type: 1, props: [{ name: 'items', global: false, description: '', tags: [], required: false, type: 'VPhotoSwipeItem[] | undefined', default: '[]', schema: '', declarations: [] }, { name: 'options', global: false, description: '', tags: [], required: false, type: 'Partial<PreparedPhotoSwipeOptions> | undefined', default: '{}', schema: '', declarations: [] }, { name: 'singleThumbnail', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'thumbnailRadius', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VPlaceholderPageMeta = { type: 1, props: [{ name: 'title', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'larger', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'subtitle', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'action', type: '{}', description: '', schema: '', declarations: [] }, { name: 'image', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VPlaceholderSectionMeta = { type: 1, props: [{ name: 'title', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'subtitle', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'action', type: '{}', description: '', schema: '', declarations: [] }, { name: 'image', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VPlaceloadMeta = { type: 1, props: [{ name: 'centered', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'disabled', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'height', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"10px"', schema: '', declarations: [] }, { name: 'mobileHeight', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'mobileWidth', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'width', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"100%"', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VPlaceloadAvatarMeta = { type: 1, props: [{ name: 'centered', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'disabled', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'rounded', global: false, description: '', tags: [], required: false, type: 'VPlaceloadAvatarRounded | undefined', default: '"full"', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: 'VPlaceloadAvatarSize | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VPlaceloadTextMeta = { type: 1, props: [{ name: 'centered', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'disabled', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'lastLineWidth', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"100%"', schema: '', declarations: [] }, { name: 'lines', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '2', schema: '', declarations: [] }, { name: 'width', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"100%"', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VPlaceloadWrapMeta = { type: 1, props: [], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VPlyrMeta = { type: 1, props: [{ name: 'source', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'captions', global: false, description: '', tags: [], required: false, type: 'VPlyrCaptions[] | undefined', default: '[]', schema: '', declarations: [] }, { name: 'embed', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'options', global: false, description: '', tags: [], required: false, type: 'Options | undefined', default: '{}', schema: '', declarations: [] }, { name: 'poster', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '""', schema: '', declarations: [] }, { name: 'ratio', global: false, description: '', tags: [], required: false, type: 'VPlyrFormat | undefined', default: '"16by9"', schema: '', declarations: [] }, { name: 'reversed', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'title', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '""', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VProgressMeta = { type: 1, props: [{ name: 'color', global: false, description: '', tags: [], required: false, type: 'VProgressColor | undefined', default: '"primary"', schema: '', declarations: [] }, { name: 'max', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '100', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: 'VProgressSize | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'value', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VRadioMeta = { type: 1, props: [{ name: 'value', global: false, description: '', tags: [], required: true, type: 'any', schema: '', declarations: [] }, { name: 'color', global: false, description: '', tags: [], required: false, type: 'VRadioColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'id', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'label', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'any', schema: '', declarations: [] }, { name: 'name', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'paddingless', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'false', schema: '', declarations: [] }, { name: 'solid', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'square', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{ field: FieldContext<unknown> | undefined; id: string; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VRangeRatingMeta = { type: 1, props: [{ name: 'disabled', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'id', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'label', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'max', global: false, description: '', tags: [], required: false, type: 'number | undefined', default: '5', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'number | undefined', schema: '', declarations: [] }, { name: 'readonly', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: '"small" | "medium" | "large" | "base" | "xlarge" | undefined', default: '"base"', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{ value: number; isSelected: number | boolean; isHighlighted: boolean; }', description: '', schema: '', declarations: [] }, { name: 'label', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VReloadPromptMeta = { type: 1, props: [{ name: 'appName', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VSelectMeta = { type: 1, props: [{ name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'any', schema: '', declarations: [] }, { name: 'multiple', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'raw', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{ selected: any; id: string; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VSnackMeta = { type: 1, props: [{ name: 'title', global: false, description: '', tags: [], required: true, type: 'string', schema: '', declarations: [] }, { name: 'color', global: false, description: '', tags: [], required: false, type: 'VSnackColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'icon', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'image', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'placeholder', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"https://via.placeholder.com/50x50"', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: '"small" | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'solid', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'white', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }, { name: 'title', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VSwitchBlockMeta = { type: 1, props: [{ name: 'color', global: false, description: '', tags: [], required: false, type: 'VSwitchBlockColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'label', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'any', schema: '', declarations: [] }, { name: 'thin', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VSwitchSegmentMeta = { type: 1, props: [{ name: 'color', global: false, description: '', tags: [], required: false, type: 'VSwitchSegmentColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'labelFalse', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'labelTrue', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'any', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'label-false', type: '{}', description: '', schema: '', declarations: [] }, { name: 'label-true', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VTabsMeta = { type: 1, props: [{ name: 'tabs', global: false, description: '', tags: [], required: true, type: 'VTabsItem[]', schema: '', declarations: [] }, { name: 'align', global: false, description: '', tags: [], required: false, type: 'VTabsAlign | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'selected', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'slider', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'slow', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'type', global: false, description: '', tags: [], required: false, type: 'VTabsType | undefined', default: 'undefined', schema: '', declarations: [] }], events: [{ name: 'update:selected', type: '[value: any]', signature: '(event: "update:selected", value: any): void', schema: [], declarations: [] }], exposed: [], slots: [{ name: 'tab', type: '{ activeValue: string; }', description: '', schema: '', declarations: [] }, { name: 'tab-link', type: '{ activeValue: string; tab: VTabsItem; key: number; toggle: (value: string) => void; }', description: '', schema: '', declarations: [] }, { name: 'tab-link-label', type: '{ activeValue: string; tab: VTabsItem; key: number; toggle: (value: string) => void; }', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VTagMeta = { type: 1, props: [{ name: 'color', global: false, description: '', tags: [], required: false, type: 'VTagColor | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'curved', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'elevated', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'label', global: false, description: '', tags: [], required: false, type: 'string | number | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'outlined', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'remove', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'rounded', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'size', global: false, description: '', tags: [], required: false, type: '"tiny" | undefined', default: 'undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VTagsMeta = { type: 1, props: [{ name: 'addons', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VTextEllipsisMeta = { type: 1, props: [{ name: 'mobileWidth', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: 'undefined', schema: '', declarations: [] }, { name: 'width', global: false, description: '', tags: [], required: false, type: 'string | undefined', default: '"150px"', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VTextareaMeta = { type: 1, props: [{ name: 'autogrow', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'modelValue', global: false, description: '', tags: [], required: false, type: 'string | undefined', schema: '', declarations: [] }, { name: 'raw', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [] } satisfies ComponentMeta
export const VViewWrapperMeta = { type: 1, props: [{ name: 'full', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }, { name: 'topNav', global: false, description: '', tags: [], required: false, type: 'boolean | undefined', schema: '', declarations: [] }], events: [], exposed: [], slots: [{ name: 'default', type: '{}', description: '', schema: '', declarations: [] }] } satisfies ComponentMeta
export const VVivusMeta = { type: 1, props: [{ name: 'options', global: false, description: '', tags: [], required: false, type: 'Record<string, any> | undefined', default: '{}', schema: '', declarations: [] }], events: [{ name: 'ready', type: 'any[]', signature: '(event: "ready", ...args: any[]): void', schema: [], declarations: [] }], exposed: [], slots: [] } satisfies ComponentMeta
